import streamlit as st
import os
from src.data.data_loader import DataLoader
from src.data.data_processor import DataProcessor
from src.pages.home import HomePage
from src.pages.exploratory import ExploratoryPage
from src.pages.algorithm1 import Algorithm1Page
from src.pages.algorithm2 import Algorithm2Page
from typing import Dict, Callable


class CAGEDApp:
    """
    Classe principal da aplica칞칚o Streamlit para an치lise de dados do CAGED.
    
    Implementa um padr칚o de design semelhante ao padr칚o Strategy para gerenciar diferentes p치ginas.
    """
    
    def __init__(self) -> None:
        """
        Inicializa a aplica칞칚o principal.
        """
        # Configura칞칚o da aplica칞칚o Streamlit
        self._config_streamlit()
        
        # Inicializa componentes de dados
        self.data_loader = DataLoader(project_id=st.secrets["PROJECT_ID"])
        self.data_processor = DataProcessor()
        
        # Inicializa p치ginas
        self.pages = {
            "In칤cio": HomePage(),
            "An치lise Explorat칩ria": ExploratoryPage(self.data_loader, self.data_processor),
            "Algoritmo 1 - An치lise Preditiva": Algorithm1Page(),
            "Algoritmo 2 - Agrupamento e Segmenta칞칚o": Algorithm2Page()
        }
    
    def _config_streamlit(self) -> None:
        """
        Configura as defini칞칫es do Streamlit.
        """
        st.set_page_config(
            page_title="An치lise de Dados do CAGED",
            page_icon="游늵",
            layout="wide",
            initial_sidebar_state="expanded",
        )
        
        # CSS personalizado
        st.markdown("""
        <style>
        .main .block-container {
            padding-top: 2rem;
            padding-bottom: 2rem;
        }
        h1, h2, h3 {
            color: #1E88E5;
        }
        .stButton button {
            background-color: #1E88E5;
            color: white;
        }
        .stProgress .st-bo {
            background-color: #1E88E5;
        }
        </style>
        """, unsafe_allow_html=True)
    
    def run(self) -> None:
        """
        Executa a aplica칞칚o Streamlit.
        """
        # T칤tulo no sidebar
        st.sidebar.title("Navega칞칚o")
        
        # Sele칞칚o de p치gina no sidebar
        selection = st.sidebar.radio("Ir para", list(self.pages.keys()))
        
        # Informa칞칫es sobre o projeto
        st.sidebar.markdown("---")
        st.sidebar.info(
            "Este dashboard foi desenvolvido para an치lise explorat칩ria de dados "
            "do CAGED (Cadastro Geral de Empregados e Desempregados)."
        )
        
        # Exibe a p치gina selecionada
        page = self.pages[selection]

        try:
            st.write(f"SECRET_TEST: {st.secrets['PROJECT_ID'][:3]}...")
            st.success("Secrets est칚o configurados corretamente!")
        except Exception as e:  
            st.error(f"Erro ao acessar secrets: {e}")
        page.render()


if __name__ == "__main__":
    app = CAGEDApp()
    app.run()
